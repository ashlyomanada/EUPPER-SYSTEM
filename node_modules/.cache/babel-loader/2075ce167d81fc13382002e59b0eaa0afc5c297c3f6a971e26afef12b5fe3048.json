{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      UsersInfo: [],\n      searchText: \"\",\n      formVisible: false,\n      selectedUser: {\n        id: null,\n        username: \"\",\n        office: \"\",\n        phone_no: \"\",\n        email: \"\"\n      }\n    };\n  },\n  created() {\n    this.getUsersInfo();\n  },\n  methods: {\n    async getUsersInfo() {\n      try {\n        const UsersInfo = await axios.get(\"getUsersInfo\");\n        this.UsersInfo = UsersInfo.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openForm(UsersInfo) {\n      this.selectedUser = {\n        ...UsersInfo\n      };\n      this.formVisible = true;\n    },\n    async saveUser() {\n      try {\n        const response = await axios.post(\"/api/saveUser\", this.selectedUser);\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData && responseData.success) {\n            console.log(responseData.message);\n            this.formVisible = false;\n            this.getUsersInfo();\n          } else {\n            console.error(\"Save failed:\", responseData.message);\n          }\n        } else {\n          console.error(`Unexpected response status: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"Error saving admin:\", error);\n      }\n    },\n    closeForm() {\n      this.formVisible = false;\n    },\n    async changeAllUserStatus() {\n      try {\n        const response = await axios.post(\"/changeAllUserStatus\");\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData && responseData.success) {\n            // console.log(responseData.message);\n            this.getUsersInfo(); // Refresh the user list after the status change\n          } else {\n            console.error(\"Status change failed:\", responseData.message);\n          }\n        } else {\n          console.error(`Unexpected response status: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"Error changing all user status:\", error);\n      }\n    },\n    async toggleUserStatus(userInfo) {\n      //console.log(\"userInfo:\", userInfo);\n\n      try {\n        const response = await axios.post(\"/toggleUserStatus/\", {\n          userId: userInfo\n        });\n        //console.log(\"Server response:\", response);\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData && responseData.success) {\n            //console.log(responseData.message);\n            this.getUsersInfo(); // Refresh the user list after the status change\n          } else {\n            console.error(\"Status change failed:\", responseData.message);\n          }\n        } else {\n          console.error(`Unexpected response status: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"Error changing user status:\", error);\n      }\n    },\n    findData() {\n      // Get selected month and year\n      const selectedYear = document.querySelector(\".year\").value;\n\n      // Filter data based on selected month and year\n      this.PpoInfo = this.PpoInfo.filter(item => {\n        return item.month === selectedMonth && item.year === selectedYear;\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","UsersInfo","searchText","formVisible","selectedUser","id","username","office","phone_no","email","created","getUsersInfo","methods","get","e","console","log","openForm","saveUser","response","post","status","responseData","success","message","error","closeForm","changeAllUserStatus","toggleUserStatus","userInfo","userId","findData","selectedYear","document","querySelector","value","PpoInfo","filter","item","month","selectedMonth","year"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\ManageUser.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-data\">\r\n    <div class=\"order\">\r\n      <div class=\"head\">\r\n        <h3>List of Users</h3>\r\n        <button class=\"find\" @click=\"changeAllUserStatus\">\r\n          <i class=\"fa-solid fa-power-off\"></i>\r\n          Change All User Status\r\n        </button>\r\n        <div>\r\n          <button class=\"find\"><i class=\"bx bx-search\"></i>Find</button>\r\n          <input v-model=\"searchText\" type=\"text\" class=\"year\" />\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Office</th>\r\n            <th>Phone No.</th>\r\n            <th>Email</th>\r\n            <th>Status</th>\r\n            <th>Action</th>\r\n            <th>Update</th>\r\n            <th>Contact User</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"UsersInfo in UsersInfo\" :key=\"UsersInfo.user_id\">\r\n            <td>{{ UsersInfo.username }}</td>\r\n            <td>{{ UsersInfo.office }}</td>\r\n            <td>{{ UsersInfo.phone_no }}</td>\r\n            <td>{{ UsersInfo.email }}</td>\r\n            <td>{{ UsersInfo.status }}</td>\r\n            <td class=\"td-btn\">\r\n              <button\r\n                class=\"users-btn\"\r\n                @click=\"toggleUserStatus(UsersInfo.user_id)\"\r\n              >\r\n                <i\r\n                  class=\"fa-solid fa-power-off fa-lg\"\r\n                  :class=\"{\r\n                    'green-btn': UsersInfo.status === 'Enable',\r\n                    'red-btn': UsersInfo.status === 'Disable',\r\n                  }\"\r\n                ></i>\r\n              </button>\r\n            </td>\r\n            <td class=\"td-btn\">\r\n              <button class=\"pen-btn\" @click=\"openForm(UsersInfo)\">\r\n                <i class=\"fa-solid fa-pen fa-lg\"></i>\r\n              </button>\r\n            </td>\r\n            <td class=\"td-btn\">\r\n              <button class=\"users-btn\">\r\n                <i class=\"fa-solid fa-phone fa-lg\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <form\r\n    class=\"form\"\r\n    id=\"modal-form\"\r\n    :style=\"{ display: formVisible ? 'block' : 'none' }\"\r\n  >\r\n    <input\r\n      v-model=\"selectedUser.username\"\r\n      type=\"text\"\r\n      placeholder=\"Username\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedUser.office\"\r\n      type=\"text\"\r\n      placeholder=\"Office\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedUser.email\"\r\n      type=\"text\"\r\n      placeholder=\"Email\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedUser.phone_no\"\r\n      type=\"text\"\r\n      placeholder=\"Phone No.\"\r\n      class=\"input\"\r\n    />\r\n    <div class=\"modal-buttons\">\r\n      <button @click.prevent=\"saveUser\">Save</button>\r\n      <button @click.prevent=\"closeForm\">Close</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      UsersInfo: [],\r\n      searchText: \"\",\r\n      formVisible: false,\r\n      selectedUser: {\r\n        id: null,\r\n        username: \"\",\r\n        office: \"\",\r\n        phone_no: \"\",\r\n        email: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.getUsersInfo();\r\n  },\r\n  methods: {\r\n    async getUsersInfo() {\r\n      try {\r\n        const UsersInfo = await axios.get(\"getUsersInfo\");\r\n        this.UsersInfo = UsersInfo.data;\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n\r\n    openForm(UsersInfo) {\r\n      this.selectedUser = { ...UsersInfo };\r\n      this.formVisible = true;\r\n    },\r\n\r\n    async saveUser() {\r\n      try {\r\n        const response = await axios.post(\"/api/saveUser\", this.selectedUser);\r\n\r\n        if (response.status === 200) {\r\n          const responseData = response.data;\r\n\r\n          if (responseData && responseData.success) {\r\n            console.log(responseData.message);\r\n            this.formVisible = false;\r\n            this.getUsersInfo();\r\n          } else {\r\n            console.error(\"Save failed:\", responseData.message);\r\n          }\r\n        } else {\r\n          console.error(`Unexpected response status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error saving admin:\", error);\r\n      }\r\n    },\r\n\r\n    closeForm() {\r\n      this.formVisible = false;\r\n    },\r\n\r\n    async changeAllUserStatus() {\r\n      try {\r\n        const response = await axios.post(\"/changeAllUserStatus\");\r\n        if (response.status === 200) {\r\n          const responseData = response.data;\r\n\r\n          if (responseData && responseData.success) {\r\n            // console.log(responseData.message);\r\n            this.getUsersInfo(); // Refresh the user list after the status change\r\n          } else {\r\n            console.error(\"Status change failed:\", responseData.message);\r\n          }\r\n        } else {\r\n          console.error(`Unexpected response status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error changing all user status:\", error);\r\n      }\r\n    },\r\n\r\n    async toggleUserStatus(userInfo) {\r\n      //console.log(\"userInfo:\", userInfo);\r\n\r\n      try {\r\n        const response = await axios.post(\"/toggleUserStatus/\", {\r\n          userId: userInfo,\r\n        });\r\n        //console.log(\"Server response:\", response);\r\n        if (response.status === 200) {\r\n          const responseData = response.data;\r\n\r\n          if (responseData && responseData.success) {\r\n            //console.log(responseData.message);\r\n            this.getUsersInfo(); // Refresh the user list after the status change\r\n          } else {\r\n            console.error(\"Status change failed:\", responseData.message);\r\n          }\r\n        } else {\r\n          console.error(`Unexpected response status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error changing user status:\", error);\r\n      }\r\n    },\r\n\r\n    findData() {\r\n      // Get selected month and year\r\n      const selectedYear = document.querySelector(\".year\").value;\r\n\r\n      // Filter data based on selected month and year\r\n      this.PpoInfo = this.PpoInfo.filter((item) => {\r\n        return item.month === selectedMonth && item.year === selectedYear;\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#modal-form {\r\n  position: absolute;\r\n  width: 50%;\r\n  top: 15%;\r\n  left: 25%;\r\n  display: none;\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: end;\r\n  width: 100%;\r\n  gap: 1rem;\r\n  padding-top: 1rem;\r\n}\r\n.td-btn {\r\n  text-align: center;\r\n}\r\n.fa-solid {\r\n  font-weight: 600;\r\n}\r\n.users-btn {\r\n  color: rgb(47, 212, 47);\r\n}\r\n.green-btn {\r\n  color: rgb(47, 212, 47);\r\n}\r\n.pen-btn {\r\n  color: rgb(233, 70, 70);\r\n}\r\n.red-btn {\r\n  color: rgb(233, 70, 70);\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}