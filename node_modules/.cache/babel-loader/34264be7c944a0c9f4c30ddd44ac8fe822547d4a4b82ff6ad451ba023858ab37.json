{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      UserRatings: null\n    };\n  },\n  mounted() {\n    // Retrieve user information from session storage\n    const storedUserId = sessionStorage.getItem(\"id\");\n    console.log(storedUserId);\n    // Check if the user is logged in\n    if (storedUserId) {\n      // Make an Axios request to fetch user data based on session ID\n      axios.get(`/viewUserRatings/${storedUserId}`).then(response => {\n        // Update the component's data with the fetched user data\n        this.UserRatings = response.data;\n        console.log(this.UserRatings);\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  }\n};\n\n/* methods: {\r\n    async getUserRatings() {\r\n      try {\r\n        const response = await axios.get(\"/getUserRatings\");\r\n        this.UserRatings = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching Useratings data:\", error);\r\n      }\r\n    },\r\n  }, */","map":{"version":3,"names":["axios","data","UserRatings","mounted","storedUserId","sessionStorage","getItem","console","log","get","then","response","catch","error"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\UserPPO.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-data\">\r\n    <div class=\"order\">\r\n      <div class=\"head\">\r\n        <div>\r\n          <h3>Unit Performance Evaluation Rating</h3>\r\n          <h4>Oriental Mindoro PPO / CPO Level</h4>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Month</th>\r\n            <th>Year</th>\r\n            <th>DO</th>\r\n            <th>DIDM</th>\r\n            <th>DI</th>\r\n            <th>DPCR</th>\r\n            <th>Dl</th>\r\n            <th>Dhrdd</th>\r\n            <th>Dprm</th>\r\n            <th>Dictm</th>\r\n            <th>Dpl</th>\r\n            <th>Dc</th>\r\n            <th>Drd</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-if=\"UserRatings\">\r\n            <td>{{ UserRatings.month }}</td>\r\n            <td>{{ UserRatings.year }}</td>\r\n            <td>{{ UserRatings.office }}</td>\r\n            <td>{{ UserRatings.do }}</td>\r\n            <td>{{ UserRatings.didm }}</td>\r\n            <td>{{ UserRatings.di }}</td>\r\n            <td>{{ UserRatings.dpcr }}</td>\r\n            <td>{{ UserRatings.dl }}</td>\r\n            <td>{{ UserRatings.dhrdd }}</td>\r\n            <td>{{ UserRatings.dprm }}</td>\r\n            <td>{{ UserRatings.dictm }}</td>\r\n            <td>{{ UserRatings.dpl }}</td>\r\n            <td>{{ UserRatings.dc }}</td>\r\n            <td>{{ UserRatings.drd }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      UserRatings: null,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    // Retrieve user information from session storage\r\n    const storedUserId = sessionStorage.getItem(\"id\");\r\n    console.log(storedUserId);\r\n    // Check if the user is logged in\r\n    if (storedUserId) {\r\n      // Make an Axios request to fetch user data based on session ID\r\n      axios\r\n        .get(`/viewUserRatings/${storedUserId}`)\r\n        .then((response) => {\r\n          // Update the component's data with the fetched user data\r\n          this.UserRatings = response.data;\r\n          console.log(this.UserRatings);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  },\r\n};\r\n\r\n/* methods: {\r\n    async getUserRatings() {\r\n      try {\r\n        const response = await axios.get(\"/getUserRatings\");\r\n        this.UserRatings = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching Useratings data:\", error);\r\n      }\r\n    },\r\n  }, */\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAmDA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,YAAW,GAAIC,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;IACzB;IACA,IAAIA,YAAY,EAAE;MAChB;MACAJ,KAAI,CACDS,GAAG,CAAE,oBAAmBL,YAAa,EAAC,EACtCM,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,IAAI,CAACT,WAAU,GAAIS,QAAQ,CAACV,IAAI;QAChCM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,WAAW,CAAC;MAC/B,CAAC,EACAU,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACM,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN;EACF;AACF,CAAC;;AAED"},"metadata":{},"sourceType":"module","externalDependencies":[]}