{"ast":null,"code":"import PieChart from \"./PieChart.vue\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      ratingCount: 0,\n      userCount: 0,\n      selectedYear: new Date().getFullYear(),\n      pieChartData: {\n        labels: [],\n        datasets: [{\n          data: [],\n          backgroundColor: [],\n          hoverBackgroundColor: []\n        }]\n      },\n      pieChartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  components: {\n    PieChart\n  },\n  mounted() {\n    this.fetchRatingCount();\n    this.fetchUserCount();\n    this.fetchData();\n  },\n  methods: {\n    async fetchRatingCount() {\n      try {\n        const response = await fetch(\"http://localhost:8080/countUserRatings\");\n        const data = await response.json();\n        this.ratingCount = data.count;\n        //console.log(data);\n      } catch (error) {\n        console.error(\"Error fetching rating count:\", error);\n      }\n    },\n    async fetchUserCount() {\n      try {\n        const response = await fetch(\"http://localhost:8080/countUser\");\n        const data = await response.json();\n        this.userCount = data.count;\n        //console.log(data);\n      } catch (error) {\n        console.error(\"Error fetching rating count:\", error);\n      }\n    },\n    async fetchData() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/calculateRatings\");\n        const data = response.data;\n        this.pieChartData.labels = data.months;\n        this.pieChartData.datasets[0].data = data.ratingsArray;\n        this.pieChartData.datasets[0].backgroundColor = data.backgroundColor;\n        this.pieChartData.datasets[0].hoverBackgroundColor = data.hoverBackgroundColor;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["PieChart","axios","data","ratingCount","userCount","selectedYear","Date","getFullYear","pieChartData","labels","datasets","backgroundColor","hoverBackgroundColor","pieChartOptions","responsive","maintainAspectRatio","components","mounted","fetchRatingCount","fetchUserCount","fetchData","methods","response","fetch","json","count","error","console","get","months","ratingsArray"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"head-title\">\r\n    <div class=\"left\">\r\n      <h1 id=\"dashboardTitle\">Dashboard</h1>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"dash-box\">\r\n    <div>\r\n      <pie-chart\r\n        :chart-data=\"pieChartData\"\r\n        :chart-options=\"pieChartOptions\"\r\n      ></pie-chart>\r\n      <form @submit.prevent=\"fetchData\" class=\"year-container\">\r\n        <label><span>Select Year:</span></label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"selectedYear\"\r\n          v-model=\"selectedYear\"\r\n          min=\"2000\"\r\n          max=\"2100\"\r\n          required\r\n        />\r\n        <button type=\"submit\" class=\"findRate\">Get Ratings</button>\r\n      </form>\r\n    </div>\r\n    <ul class=\"box-info\">\r\n      <li>\r\n        <i class=\"bx bxs-calendar-check\"></i>\r\n        <span class=\"text\">\r\n          <h3>{{ ratingCount }}</h3>\r\n          <p>Ratings</p>\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <i class=\"bx bxs-group\"></i>\r\n        <span class=\"text\">\r\n          <h3>{{ userCount }}</h3>\r\n          <p>Users</p>\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <i class=\"bx bxs-calendar-check\"></i>\r\n        <span class=\"text\">\r\n          <h3>0</h3>\r\n          <p>Announcements</p>\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport PieChart from \"./PieChart.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ratingCount: 0,\r\n      userCount: 0,\r\n      selectedYear: new Date().getFullYear(),\r\n      pieChartData: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            data: [],\r\n            backgroundColor: [],\r\n            hoverBackgroundColor: [],\r\n          },\r\n        ],\r\n      },\r\n      pieChartOptions: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n      },\r\n    };\r\n  },\r\n  components: {\r\n    PieChart,\r\n  },\r\n  mounted() {\r\n    this.fetchRatingCount();\r\n    this.fetchUserCount();\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    async fetchRatingCount() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/countUserRatings\");\r\n        const data = await response.json();\r\n        this.ratingCount = data.count;\r\n        //console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching rating count:\", error);\r\n      }\r\n    },\r\n    async fetchUserCount() {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/countUser\");\r\n        const data = await response.json();\r\n        this.userCount = data.count;\r\n        //console.log(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching rating count:\", error);\r\n      }\r\n    },\r\n\r\n    async fetchData() {\r\n      try {\r\n        const response = await axios.get(\r\n          \"http://localhost:8080/calculateRatings\"\r\n        );\r\n        const data = response.data;\r\n        this.pieChartData.labels = data.months;\r\n        this.pieChartData.datasets[0].data = data.ratingsArray;\r\n        this.pieChartData.datasets[0].backgroundColor = data.backgroundColor;\r\n        this.pieChartData.datasets[0].hoverBackgroundColor =\r\n          data.hoverBackgroundColor;\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style>\r\n.dash-box {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: 0.5fr;\r\n}\r\n.findRate {\r\n  background: green;\r\n  padding: 0.2rem 0.5rem;\r\n  color: white;\r\n}\r\n.year-container {\r\n  display: flex;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n}\r\n</style>\r\n"],"mappings":"AAqDA,OAAOA,QAAO,MAAO,gBAAgB;AACrC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CAAC;MACdC,SAAS,EAAE,CAAC;MACZC,YAAY,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACtCC,YAAY,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,CACR;UACER,IAAI,EAAE,EAAE;UACRS,eAAe,EAAE,EAAE;UACnBC,oBAAoB,EAAE;QACxB,CAAC;MAEL,CAAC;MACDC,eAAe,EAAE;QACfC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF,CAAC;EACH,CAAC;EACDC,UAAU,EAAE;IACVhB;EACF,CAAC;EACDiB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMH,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMI,QAAO,GAAI,MAAMC,KAAK,CAAC,wCAAwC,CAAC;QACtE,MAAMrB,IAAG,GAAI,MAAMoB,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAI,CAACrB,WAAU,GAAID,IAAI,CAACuB,KAAK;QAC7B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACD,MAAMP,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMrB,IAAG,GAAI,MAAMoB,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAI,CAACpB,SAAQ,GAAIF,IAAI,CAACuB,KAAK;QAC3B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAED,MAAMN,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMrB,KAAK,CAAC2B,GAAG,CAC9B,wCACF,CAAC;QACD,MAAM1B,IAAG,GAAIoB,QAAQ,CAACpB,IAAI;QAC1B,IAAI,CAACM,YAAY,CAACC,MAAK,GAAIP,IAAI,CAAC2B,MAAM;QACtC,IAAI,CAACrB,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACR,IAAG,GAAIA,IAAI,CAAC4B,YAAY;QACtD,IAAI,CAACtB,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACC,eAAc,GAAIT,IAAI,CAACS,eAAe;QACpE,IAAI,CAACH,YAAY,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACE,oBAAmB,GAC/CV,IAAI,CAACU,oBAAoB;MAC7B,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}