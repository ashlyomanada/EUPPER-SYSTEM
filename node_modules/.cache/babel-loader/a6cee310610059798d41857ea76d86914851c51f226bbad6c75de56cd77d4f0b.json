{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      AdminsInfo: [],\n      formVisible: false,\n      selectedAdmin: {\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone_no: \"\"\n      }\n    };\n  },\n  created() {\n    this.getAdminsInfo();\n  },\n  methods: {\n    async getAdminsInfo() {\n      try {\n        const AdminsInfo = await axios.get(\"getAdmins\");\n        this.AdminsInfo = AdminsInfo.data;\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    openForm(adminInfo) {\n      this.selectedAdmin = {\n        ...adminInfo\n      }; // Clone the admin object\n      this.formVisible = true;\n    },\n    // Vue.js method\n    // Vue.js method\n    async updateAdmin() {\n      try {\n        if (!this.selectedAdmin.admin_id) {\n          console.error(\"admin_id is not defined\");\n          return;\n        }\n        const dataToSend = {\n          username: this.selectedAdmin.username,\n          password: this.selectedAdmin.password,\n          email: this.selectedAdmin.email,\n          phone_no: this.selectedAdmin.phone_no\n        };\n        const adminId = this.selectedAdmin.admin_id;\n        const response = await axios.post(`/api/updateAdmin/${adminId}`, dataToSend, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          responseType: \"text\"\n        });\n        console.log(\"Full Response:\", response);\n        if (response.data) {\n          const responseData = JSON.parse(response.data);\n          if (responseData && responseData.message) {\n            console.log(responseData.message);\n            this.formVisible = false;\n            this.getAdminsInfo();\n          } else if (responseData && responseData.error) {\n            console.error(responseData.error);\n          } else {\n            console.error(\"Unexpected response format\");\n          }\n        } else {\n          console.log(\"Empty response data, treating as success\");\n          this.formVisible = false;\n          this.getAdminsInfo();\n        }\n      } catch (error) {\n        console.error(\"Error updating admin:\", error);\n      }\n    },\n    closeForm() {\n      this.formVisible = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","AdminsInfo","formVisible","selectedAdmin","username","password","email","phone_no","created","getAdminsInfo","methods","get","e","console","log","openForm","adminInfo","updateAdmin","admin_id","error","dataToSend","adminId","response","post","headers","responseType","responseData","JSON","parse","message","closeForm"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\ManageAdmin.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-data\">\r\n    <div class=\"order\">\r\n      <div class=\"head\">\r\n        <h3>Manage Admin</h3>\r\n        <i class=\"bx bx-search\"></i>\r\n        <i class=\"bx bx-filter\"></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Password</th>\r\n            <th>Email</th>\r\n            <th>Phone No.</th>\r\n            <th>Update</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"adminInfo in AdminsInfo\" :key=\"adminInfo.admin_id\">\r\n            <td>{{ adminInfo.username }}</td>\r\n            <td>{{ adminInfo.password }}</td>\r\n            <td>{{ adminInfo.email }}</td>\r\n            <td>{{ adminInfo.phone_no }}</td>\r\n            <td class=\"td-btn\">\r\n              <button class=\"pen-btn\" @click=\"openForm(adminInfo)\">\r\n                <i class=\"fa-solid fa-pen fa-lg\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <form\r\n    class=\"form\"\r\n    id=\"modal-form\"\r\n    :style=\"{ display: formVisible ? 'block' : 'none' }\"\r\n  >\r\n    <input\r\n      v-model=\"selectedAdmin.username\"\r\n      type=\"text\"\r\n      placeholder=\"Username\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedAdmin.password\"\r\n      type=\"text\"\r\n      placeholder=\"Password\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedAdmin.email\"\r\n      type=\"text\"\r\n      placeholder=\"Email\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedAdmin.phone_no\"\r\n      type=\"text\"\r\n      placeholder=\"Phone No.\"\r\n      class=\"input\"\r\n    />\r\n    <div class=\"modal-buttons\">\r\n      <button @click.prevent=\"updateAdmin\">Update</button>\r\n      <button @click.prevent=\"closeForm\">Close</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      AdminsInfo: [],\r\n      formVisible: false,\r\n      selectedAdmin: {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_no: \"\",\r\n      },\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.getAdminsInfo();\r\n  },\r\n  methods: {\r\n    async getAdminsInfo() {\r\n      try {\r\n        const AdminsInfo = await axios.get(\"getAdmins\");\r\n        this.AdminsInfo = AdminsInfo.data;\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    },\r\n    openForm(adminInfo) {\r\n      this.selectedAdmin = { ...adminInfo }; // Clone the admin object\r\n      this.formVisible = true;\r\n    },\r\n    // Vue.js method\r\n    // Vue.js method\r\n    async updateAdmin() {\r\n      try {\r\n        if (!this.selectedAdmin.admin_id) {\r\n          console.error(\"admin_id is not defined\");\r\n          return;\r\n        }\r\n\r\n        const dataToSend = {\r\n          username: this.selectedAdmin.username,\r\n          password: this.selectedAdmin.password,\r\n          email: this.selectedAdmin.email,\r\n          phone_no: this.selectedAdmin.phone_no,\r\n        };\r\n\r\n        const adminId = this.selectedAdmin.admin_id;\r\n\r\n        const response = await axios.post(\r\n          `/api/updateAdmin/${adminId}`,\r\n          dataToSend,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: \"text\",\r\n          }\r\n        );\r\n\r\n        console.log(\"Full Response:\", response);\r\n\r\n        if (response.data) {\r\n          const responseData = JSON.parse(response.data);\r\n\r\n          if (responseData && responseData.message) {\r\n            console.log(responseData.message);\r\n            this.formVisible = false;\r\n            this.getAdminsInfo();\r\n          } else if (responseData && responseData.error) {\r\n            console.error(responseData.error);\r\n          } else {\r\n            console.error(\"Unexpected response format\");\r\n          }\r\n        } else {\r\n          console.log(\"Empty response data, treating as success\");\r\n          this.formVisible = false;\r\n          this.getAdminsInfo();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating admin:\", error);\r\n      }\r\n    },\r\n\r\n    closeForm() {\r\n      this.formVisible = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#modal-form {\r\n  position: absolute;\r\n  width: 50%;\r\n  top: 25%;\r\n  left: 25%;\r\n  display: none;\r\n}\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: end;\r\n  width: 100%;\r\n  gap: 1rem;\r\n  padding-top: 1rem;\r\n}\r\n</style>\r\n"],"mappings":"AAuEA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMR,UAAS,GAAI,MAAMF,KAAK,CAACY,GAAG,CAAC,WAAW,CAAC;QAC/C,IAAI,CAACV,UAAS,GAAIA,UAAU,CAACD,IAAI;MACnC,EAAE,OAAOY,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB;IACF,CAAC;IACDG,QAAQA,CAACC,SAAS,EAAE;MAClB,IAAI,CAACb,aAAY,GAAI;QAAE,GAAGa;MAAU,CAAC,EAAE;MACvC,IAAI,CAACd,WAAU,GAAI,IAAI;IACzB,CAAC;IACD;IACA;IACA,MAAMe,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAAC,IAAI,CAACd,aAAa,CAACe,QAAQ,EAAE;UAChCL,OAAO,CAACM,KAAK,CAAC,yBAAyB,CAAC;UACxC;QACF;QAEA,MAAMC,UAAS,GAAI;UACjBhB,QAAQ,EAAE,IAAI,CAACD,aAAa,CAACC,QAAQ;UACrCC,QAAQ,EAAE,IAAI,CAACF,aAAa,CAACE,QAAQ;UACrCC,KAAK,EAAE,IAAI,CAACH,aAAa,CAACG,KAAK;UAC/BC,QAAQ,EAAE,IAAI,CAACJ,aAAa,CAACI;QAC/B,CAAC;QAED,MAAMc,OAAM,GAAI,IAAI,CAAClB,aAAa,CAACe,QAAQ;QAE3C,MAAMI,QAAO,GAAI,MAAMvB,KAAK,CAACwB,IAAI,CAC9B,oBAAmBF,OAAQ,EAAC,EAC7BD,UAAU,EACV;UACEI,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,YAAY,EAAE;QAChB,CACF,CAAC;QAEDZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEQ,QAAQ,CAAC;QAEvC,IAAIA,QAAQ,CAACtB,IAAI,EAAE;UACjB,MAAM0B,YAAW,GAAIC,IAAI,CAACC,KAAK,CAACN,QAAQ,CAACtB,IAAI,CAAC;UAE9C,IAAI0B,YAAW,IAAKA,YAAY,CAACG,OAAO,EAAE;YACxChB,OAAO,CAACC,GAAG,CAACY,YAAY,CAACG,OAAO,CAAC;YACjC,IAAI,CAAC3B,WAAU,GAAI,KAAK;YACxB,IAAI,CAACO,aAAa,CAAC,CAAC;UACtB,OAAO,IAAIiB,YAAW,IAAKA,YAAY,CAACP,KAAK,EAAE;YAC7CN,OAAO,CAACM,KAAK,CAACO,YAAY,CAACP,KAAK,CAAC;UACnC,OAAO;YACLN,OAAO,CAACM,KAAK,CAAC,4BAA4B,CAAC;UAC7C;QACF,OAAO;UACLN,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvD,IAAI,CAACZ,WAAU,GAAI,KAAK;UACxB,IAAI,CAACO,aAAa,CAAC,CAAC;QACtB;MACF,EAAE,OAAOU,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDW,SAASA,CAAA,EAAG;MACV,IAAI,CAAC5B,WAAU,GAAI,KAAK;IAC1B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}