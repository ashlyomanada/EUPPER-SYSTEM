{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport * as XLSX from \"xlsx\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      PpoInfo: []\n    };\n  },\n  created() {\n    this.getPpoInfo();\n  },\n  methods: {\n    async getPpoInfo() {\n      try {\n        const PpoInfo = await axios.get(\"getPpo\");\n        this.PpoInfo = PpoInfo.data;\n      } catch (e) {\n        console.error(\"Error fetching PpoInfo:\", e);\n      }\n    },\n    generateExcel() {\n      axios.post(\"http://localhost:8080/generate\", {}, {\n        responseType: \"arraybuffer\"\n      }).then(response => {\n        // Create a Blob from the binary data\n        const blob = new Blob([response.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n\n        // Create a download link\n        const link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(blob);\n        link.download = \"generated_report.xlsx\";\n\n        // Simulate a click on the link to trigger the download\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      }).catch(error => {\n        console.error(\"Error generating Excel file:\", error.response ? error.response.data : error.message);\n        // Handle errors, e.g., show an error message to the user\n      });\n    },\n\n    generatePdf() {\n      fetch(\"http://localhost:8080/generatePdf\", {\n        method: \"GET\",\n        // Use GET instead of POST if you're not sending any data\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.blob();\n      }).then(blob => {\n        const url = window.URL.createObjectURL(new Blob([blob]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"output.pdf\");\n        document.body.appendChild(link);\n        link.click();\n      }).catch(error => {\n        console.error(\"Error generating or loading PDF:\", error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["XLSX","axios","data","PpoInfo","created","getPpoInfo","methods","get","e","console","error","generateExcel","post","responseType","then","response","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","catch","message","generatePdf","fetch","method","headers","ok","Error","status","url","setAttribute"],"sources":["C:\\laragon\\www\\project\\src\\components\\PPO.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-data\">\r\n    <div class=\"order\">\r\n      <div class=\"head\">\r\n        <div class=\"head-options\">\r\n          <div>\r\n            <h3>Unit Performance Evaluation Rating</h3>\r\n            <h4>PPO / CPO Level</h4>\r\n          </div>\r\n          <div class=\"date-options\">\r\n            <div>\r\n              Select Month:\r\n              <select class=\"month\" name=\"month\">\r\n                <option value=\"1\">January</option>\r\n                <option value=\"2\">February</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n              </select>\r\n              Select Year:\r\n              <input\r\n                type=\"number\"\r\n                class=\"year\"\r\n                name=\"year\"\r\n                min=\"1900\"\r\n                max=\"2100\"\r\n                step=\"1\"\r\n                placeholder=\"Year\"\r\n              />\r\n              <button class=\"find\"><i class=\"bx bx-search\"></i>Find</button>\r\n            </div>\r\n            <button class=\"generate\" @click=\"generateExcel\">\r\n              Generate Excel Report\r\n            </button>\r\n            <button class=\"generate\" @click=\"generatePdf\">\r\n              Generate Pdf Report\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Office/Unit</th>\r\n            <th>DO</th>\r\n            <th>DIDM</th>\r\n            <th>DI</th>\r\n            <th>DPCR</th>\r\n            <th>DL</th>\r\n            <th>DHRDD</th>\r\n            <th>DPRM</th>\r\n            <th>DICTM</th>\r\n            <th>DPL</th>\r\n            <th>DC</th>\r\n            <th>DRD</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"PpoInfo in PpoInfo\" :key=\"PpoInfo.id\">\r\n            <td>{{ PpoInfo.office }}</td>\r\n            <td>{{ PpoInfo.do }}</td>\r\n            <td>{{ PpoInfo.didm }}</td>\r\n            <td>{{ PpoInfo.di }}</td>\r\n            <td>{{ PpoInfo.dpcr }}</td>\r\n            <td>{{ PpoInfo.dl }}</td>\r\n            <td>{{ PpoInfo.dhrdd }}</td>\r\n            <td>{{ PpoInfo.dprm }}</td>\r\n            <td>{{ PpoInfo.dictm }}</td>\r\n            <td>{{ PpoInfo.dpl }}</td>\r\n            <td>{{ PpoInfo.dc }}</td>\r\n            <td>{{ PpoInfo.drd }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      PpoInfo: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getPpoInfo();\r\n  },\r\n  methods: {\r\n    async getPpoInfo() {\r\n      try {\r\n        const PpoInfo = await axios.get(\"getPpo\");\r\n        this.PpoInfo = PpoInfo.data;\r\n      } catch (e) {\r\n        console.error(\"Error fetching PpoInfo:\", e);\r\n      }\r\n    },\r\n    generateExcel() {\r\n      axios\r\n        .post(\r\n          \"http://localhost:8080/generate\",\r\n          {},\r\n          { responseType: \"arraybuffer\" }\r\n        )\r\n        .then((response) => {\r\n          // Create a Blob from the binary data\r\n          const blob = new Blob([response.data], {\r\n            type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n\r\n          // Create a download link\r\n          const link = document.createElement(\"a\");\r\n          link.href = window.URL.createObjectURL(blob);\r\n          link.download = \"generated_report.xlsx\";\r\n\r\n          // Simulate a click on the link to trigger the download\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\r\n            \"Error generating Excel file:\",\r\n            error.response ? error.response.data : error.message\r\n          );\r\n          // Handle errors, e.g., show an error message to the user\r\n        });\r\n    },\r\n    generatePdf() {\r\n      fetch(\"http://localhost:8080/generatePdf\", {\r\n        method: \"GET\", // Use GET instead of POST if you're not sending any data\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(`HTTP error! Status: ${response.status}`);\r\n          }\r\n          return response.blob();\r\n        })\r\n        .then((blob) => {\r\n          const url = window.URL.createObjectURL(new Blob([blob]));\r\n          const link = document.createElement(\"a\");\r\n          link.href = url;\r\n          link.setAttribute(\"download\", \"output.pdf\");\r\n          document.body.appendChild(link);\r\n          link.click();\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error generating or loading PDF:\", error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\nselect {\r\n  color: var(--dark);\r\n}\r\noption {\r\n  color: var(--dark);\r\n  background: var(--light);\r\n}\r\n.year {\r\n  color: var(--dark);\r\n}\r\n.month,\r\n.year,\r\n.find,\r\n.generate {\r\n  border: 1px solid black;\r\n  padding: 0.2rem 0.5rem;\r\n}\r\n.generate {\r\n  background: green;\r\n  color: white;\r\n  border-radius: 0.4rem;\r\n}\r\n.head-options {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  width: 100%;\r\n}\r\n.date-options {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n</style>\r\n"],"mappings":";;;AAsFA,OAAO,KAAKA,IAAG,MAAO,MAAM;AAC5B,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMF,OAAM,GAAI,MAAMF,KAAK,CAACM,GAAG,CAAC,QAAQ,CAAC;QACzC,IAAI,CAACJ,OAAM,GAAIA,OAAO,CAACD,IAAI;MAC7B,EAAE,OAAOM,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,CAAC,CAAC;MAC7C;IACF,CAAC;IACDG,aAAaA,CAAA,EAAG;MACdV,KAAI,CACDW,IAAI,CACH,gCAAgC,EAChC,CAAC,CAAC,EACF;QAAEC,YAAY,EAAE;MAAc,CAChC,EACCC,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACF,QAAQ,CAACb,IAAI,CAAC,EAAE;UACrCgB,IAAI,EAAE;QACR,CAAC,CAAC;;QAEF;QACA,MAAMC,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAG,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACT,IAAI,CAAC;QAC5CG,IAAI,CAACO,QAAO,GAAI,uBAAuB;;QAEvC;QACAN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;QAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;QACZT,QAAQ,CAACO,IAAI,CAACG,WAAW,CAACX,IAAI,CAAC;MACjC,CAAC,EACAY,KAAK,CAAErB,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CACX,8BAA8B,EAC9BA,KAAK,CAACK,QAAO,GAAIL,KAAK,CAACK,QAAQ,CAACb,IAAG,GAAIQ,KAAK,CAACsB,OAC/C,CAAC;QACD;MACF,CAAC,CAAC;IACN,CAAC;;IACDC,WAAWA,CAAA,EAAG;MACZC,KAAK,CAAC,mCAAmC,EAAE;QACzCC,MAAM,EAAE,KAAK;QAAE;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACEtB,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAI,CAACA,QAAQ,CAACsB,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBvB,QAAQ,CAACwB,MAAO,EAAC,CAAC;QAC3D;QACA,OAAOxB,QAAQ,CAACC,IAAI,CAAC,CAAC;MACxB,CAAC,EACAF,IAAI,CAAEE,IAAI,IAAK;QACd,MAAMwB,GAAE,GAAIjB,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIR,IAAI,CAAC,CAACD,IAAI,CAAC,CAAC,CAAC;QACxD,MAAMG,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAG,GAAIkB,GAAG;QACfrB,IAAI,CAACsB,YAAY,CAAC,UAAU,EAAE,YAAY,CAAC;QAC3CrB,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,IAAI,CAAC;QAC/BA,IAAI,CAACU,KAAK,CAAC,CAAC;MACd,CAAC,EACAE,KAAK,CAAErB,KAAK,IAAK;QAChBD,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}