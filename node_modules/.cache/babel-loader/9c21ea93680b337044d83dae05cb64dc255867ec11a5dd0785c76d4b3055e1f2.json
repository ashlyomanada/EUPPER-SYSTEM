{"ast":null,"code":"import { Chart } from \"chart.js/auto\";\nexport default {\n  data() {\n    return {\n      chart: null\n    };\n  },\n  props: {\n    chartData: {\n      type: Object,\n      required: true\n    },\n    chartOptions: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted() {\n    this.renderChart();\n  },\n  beforeDestroy() {\n    this.destroyChart();\n  },\n  watch: {\n    chartData: {\n      handler: \"updateChart\",\n      deep: true // Watch nested properties\n    }\n  },\n  methods: {\n    renderChart() {\n      // Check if the chart is already initialized\n      if (this.chart) {\n        this.destroyChart(); // Destroy the existing chart\n      }\n\n      // Get the canvas context\n      const ctx = this.$refs.pieChart.getContext(\"2d\");\n\n      // Create a new Chart instance\n      this.chart = new Chart(ctx, {\n        type: \"pie\",\n        data: this.chartData,\n        options: this.chartOptions\n      });\n    },\n    destroyChart() {\n      // Check if the chart exists before trying to destroy it\n      if (this.chart) {\n        this.chart.destroy(); // Destroy the existing chart\n        this.chart = null; // Set the reference to null\n      }\n    },\n    updateChart() {\n      if (this.chart && Array.isArray(this.chartData.labels)) {\n        this.chart.data = this.chartData || {};\n        this.chart.options = this.chartOptions || {};\n        this.chart.update();\n      } else {\n        this.renderChart();\n      }\n    }\n  }\n};","map":{"version":3,"names":["Chart","data","chart","props","chartData","type","Object","required","chartOptions","mounted","renderChart","beforeDestroy","destroyChart","watch","handler","deep","methods","ctx","$refs","pieChart","getContext","options","destroy","updateChart","Array","isArray","labels","update"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\PieChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <canvas ref=\"pieChart\"></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Chart } from \"chart.js/auto\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chart: null,\r\n    };\r\n  },\r\n  props: {\r\n    chartData: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      required: true,\r\n    },\r\n  },\r\n  mounted() {\r\n    this.renderChart();\r\n  },\r\n  beforeDestroy() {\r\n    this.destroyChart();\r\n  },\r\n  watch: {\r\n    chartData: {\r\n      handler: \"updateChart\",\r\n      deep: true, // Watch nested properties\r\n    },\r\n  },\r\n  methods: {\r\n    renderChart() {\r\n      // Check if the chart is already initialized\r\n      if (this.chart) {\r\n        this.destroyChart(); // Destroy the existing chart\r\n      }\r\n\r\n      // Get the canvas context\r\n      const ctx = this.$refs.pieChart.getContext(\"2d\");\r\n\r\n      // Create a new Chart instance\r\n      this.chart = new Chart(ctx, {\r\n        type: \"pie\",\r\n        data: this.chartData,\r\n        options: this.chartOptions,\r\n      });\r\n    },\r\n    destroyChart() {\r\n      // Check if the chart exists before trying to destroy it\r\n      if (this.chart) {\r\n        this.chart.destroy(); // Destroy the existing chart\r\n        this.chart = null; // Set the reference to null\r\n      }\r\n    },\r\n    updateChart() {\r\n      if (this.chart && Array.isArray(this.chartData.labels)) {\r\n        this.chart.data = this.chartData || {};\r\n        this.chart.options = this.chartOptions || {};\r\n        this.chart.update();\r\n      } else {\r\n        this.renderChart();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Add any specific styles for your pie chart component here */\r\n</style>\r\n"],"mappings":"AAOA,SAASA,KAAI,QAAS,eAAe;AAErC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,YAAY,EAAE;MACZH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,aAAaA,CAAA,EAAG;IACd,IAAI,CAACC,YAAY,CAAC,CAAC;EACrB,CAAC;EACDC,KAAK,EAAE;IACLT,SAAS,EAAE;MACTU,OAAO,EAAE,aAAa;MACtBC,IAAI,EAAE,IAAI,CAAE;IACd;EACF,CAAC;EACDC,OAAO,EAAE;IACPN,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,IAAI,CAACR,KAAK,EAAE;QACd,IAAI,CAACU,YAAY,CAAC,CAAC,EAAE;MACvB;;MAEA;MACA,MAAMK,GAAE,GAAI,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACC,UAAU,CAAC,IAAI,CAAC;;MAEhD;MACA,IAAI,CAAClB,KAAI,GAAI,IAAIF,KAAK,CAACiB,GAAG,EAAE;QAC1BZ,IAAI,EAAE,KAAK;QACXJ,IAAI,EAAE,IAAI,CAACG,SAAS;QACpBiB,OAAO,EAAE,IAAI,CAACb;MAChB,CAAC,CAAC;IACJ,CAAC;IACDI,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,IAAI,CAACV,KAAK,EAAE;QACd,IAAI,CAACA,KAAK,CAACoB,OAAO,CAAC,CAAC,EAAE;QACtB,IAAI,CAACpB,KAAI,GAAI,IAAI,EAAE;MACrB;IACF,CAAC;IACDqB,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACrB,KAAI,IAAKsB,KAAK,CAACC,OAAO,CAAC,IAAI,CAACrB,SAAS,CAACsB,MAAM,CAAC,EAAE;QACtD,IAAI,CAACxB,KAAK,CAACD,IAAG,GAAI,IAAI,CAACG,SAAQ,IAAK,CAAC,CAAC;QACtC,IAAI,CAACF,KAAK,CAACmB,OAAM,GAAI,IAAI,CAACb,YAAW,IAAK,CAAC,CAAC;QAC5C,IAAI,CAACN,KAAK,CAACyB,MAAM,CAAC,CAAC;MACrB,OAAO;QACL,IAAI,CAACjB,WAAW,CAAC,CAAC;MACpB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}