{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      month: \"\",\n      year: \"\",\n      office: \"\",\n      Do: \"\",\n      didm: \"\",\n      di: \"\",\n      dpcr: \"\",\n      dl: \"\",\n      dhrdd: \"\",\n      dprm: \"\",\n      dictm: \"\",\n      dpl: \"\",\n      dc: \"\",\n      drd: \"\",\n      UserRatings: []\n    };\n  },\n  created() {\n    this.getUserRatings();\n  },\n  mounted() {\n    // Retrieve user information from session storage\n    const storedUserId = sessionStorage.getItem(\"id\");\n    console.log(storedUserId);\n    // Check if the user is logged in\n    if (storedUserId) {\n      // Make an Axios request to fetch user data based on session ID\n      axios.get(`/viewUserRatings/${storedUserId}`).then(response => {\n        // Update the component's data with the fetched user data\n        const UserRatings = response.data;\n        this.month = UserRatings.month;\n        this.year = UserRatings.year;\n        this.office = UserRatings.office;\n        this.Do = UserRatings.do;\n        this.didm = UserRatings.didm;\n        this.di = UserRatings.di;\n        this.dpcr = UserRatings.dpcr;\n        this.dl = UserRatings.dl;\n        this.dhrdd = UserRatings.dhrdd;\n        this.dprm = UserRatings.dprm;\n        this.dictm = UserRatings.dictm;\n        this.dpl = UserRatings.dpl;\n        this.dc = UserRatings.dc;\n        this.drd = UserRatings.drd;\n        console.log(UserRatings);\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  },\n  methods: {\n    async getUserRatings() {\n      try {\n        const response = await axios.get(\"/getUserRatings\");\n        this.UserRatings = response.data;\n      } catch (error) {\n        console.error(\"Error fetching Useratings data:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","month","year","office","Do","didm","di","dpcr","dl","dhrdd","dprm","dictm","dpl","dc","drd","UserRatings","created","getUserRatings","mounted","storedUserId","sessionStorage","getItem","console","log","get","then","response","do","catch","error","methods"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\UserPPO.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-data\">\r\n    <div class=\"order\">\r\n      <div class=\"head\">\r\n        <div>\r\n          <h3>Unit Performance Evaluation Rating</h3>\r\n          <h4>Oriental Mindoro PPO / CPO Level</h4>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Month</th>\r\n            <th>Year</th>\r\n            <th>DO</th>\r\n            <th>DIDM</th>\r\n            <th>DI</th>\r\n            <th>DPCR</th>\r\n            <th>Dl</th>\r\n            <th>Dhrdd</th>\r\n            <th>Dprm</th>\r\n            <th>Dictm</th>\r\n            <th>Dpl</th>\r\n            <th>Dc</th>\r\n            <th>Drd</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td>{{ month }}</td>\r\n            <td>{{ year }}</td>\r\n            <td>{{ office }}</td>\r\n            <td>{{ Do }}</td>\r\n            <td>{{ didm }}</td>\r\n            <td>{{ di }}</td>\r\n            <td>{{ dpcr }}</td>\r\n            <td>{{ dl }}</td>\r\n            <td>{{ dhrdd }}</td>\r\n            <td>{{ dprm }}</td>\r\n            <td>{{ dictm }}</td>\r\n            <td>{{ dpl }}</td>\r\n            <td>{{ dc }}</td>\r\n            <td>{{ drd }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      month: \"\",\r\n      year: \"\",\r\n      office: \"\",\r\n      Do: \"\",\r\n      didm: \"\",\r\n      di: \"\",\r\n      dpcr: \"\",\r\n      dl: \"\",\r\n      dhrdd: \"\",\r\n      dprm: \"\",\r\n      dictm: \"\",\r\n      dpl: \"\",\r\n      dc: \"\",\r\n      drd: \"\",\r\n      UserRatings: [],\r\n    };\r\n  },\r\n\r\n  created() {\r\n    this.getUserRatings();\r\n  },\r\n  mounted() {\r\n    // Retrieve user information from session storage\r\n    const storedUserId = sessionStorage.getItem(\"id\");\r\n    console.log(storedUserId);\r\n    // Check if the user is logged in\r\n    if (storedUserId) {\r\n      // Make an Axios request to fetch user data based on session ID\r\n      axios\r\n        .get(`/viewUserRatings/${storedUserId}`)\r\n        .then((response) => {\r\n          // Update the component's data with the fetched user data\r\n          const UserRatings = response.data;\r\n\r\n          this.month = UserRatings.month;\r\n          this.year = UserRatings.year;\r\n          this.office = UserRatings.office;\r\n          this.Do = UserRatings.do;\r\n          this.didm = UserRatings.didm;\r\n          this.di = UserRatings.di;\r\n          this.dpcr = UserRatings.dpcr;\r\n          this.dl = UserRatings.dl;\r\n          this.dhrdd = UserRatings.dhrdd;\r\n          this.dprm = UserRatings.dprm;\r\n          this.dictm = UserRatings.dictm;\r\n          this.dpl = UserRatings.dpl;\r\n          this.dc = UserRatings.dc;\r\n          this.drd = UserRatings.drd;\r\n          console.log(UserRatings);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  },\r\n  methods: {\r\n    async getUserRatings() {\r\n      try {\r\n        const response = await axios.get(\"/getUserRatings\");\r\n        this.UserRatings = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching Useratings data:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"],"mappings":"AAmDA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE,EAAE;MACVC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,EAAE,EAAE,EAAE;MACNC,IAAI,EAAE,EAAE;MACRC,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,EAAE,EAAE,EAAE;MACNC,GAAG,EAAE,EAAE;MACPC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,YAAW,GAAIC,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACjDC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;IACzB;IACA,IAAIA,YAAY,EAAE;MAChB;MACApB,KAAI,CACDyB,GAAG,CAAE,oBAAmBL,YAAa,EAAC,EACtCM,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAMX,WAAU,GAAIW,QAAQ,CAAC1B,IAAI;QAEjC,IAAI,CAACC,KAAI,GAAIc,WAAW,CAACd,KAAK;QAC9B,IAAI,CAACC,IAAG,GAAIa,WAAW,CAACb,IAAI;QAC5B,IAAI,CAACC,MAAK,GAAIY,WAAW,CAACZ,MAAM;QAChC,IAAI,CAACC,EAAC,GAAIW,WAAW,CAACY,EAAE;QACxB,IAAI,CAACtB,IAAG,GAAIU,WAAW,CAACV,IAAI;QAC5B,IAAI,CAACC,EAAC,GAAIS,WAAW,CAACT,EAAE;QACxB,IAAI,CAACC,IAAG,GAAIQ,WAAW,CAACR,IAAI;QAC5B,IAAI,CAACC,EAAC,GAAIO,WAAW,CAACP,EAAE;QACxB,IAAI,CAACC,KAAI,GAAIM,WAAW,CAACN,KAAK;QAC9B,IAAI,CAACC,IAAG,GAAIK,WAAW,CAACL,IAAI;QAC5B,IAAI,CAACC,KAAI,GAAII,WAAW,CAACJ,KAAK;QAC9B,IAAI,CAACC,GAAE,GAAIG,WAAW,CAACH,GAAG;QAC1B,IAAI,CAACC,EAAC,GAAIE,WAAW,CAACF,EAAE;QACxB,IAAI,CAACC,GAAE,GAAIC,WAAW,CAACD,GAAG;QAC1BQ,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;MAC1B,CAAC,EACAa,KAAK,CAAEC,KAAK,IAAK;QAChBP,OAAO,CAACO,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMb,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAM3B,KAAK,CAACyB,GAAG,CAAC,iBAAiB,CAAC;QACnD,IAAI,CAACT,WAAU,GAAIW,QAAQ,CAAC1B,IAAI;MAClC,EAAE,OAAO6B,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}