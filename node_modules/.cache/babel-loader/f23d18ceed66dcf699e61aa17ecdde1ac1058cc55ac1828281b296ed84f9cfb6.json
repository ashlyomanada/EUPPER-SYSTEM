{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      AdminsInfo: [],\n      formVisible: false,\n      selectedAdmin: {\n        admin_id: null,\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        phone_no: \"\"\n      }\n    };\n  },\n  created() {\n    this.getAdminsInfo();\n  },\n  methods: {\n    async getAdminsInfo() {\n      try {\n        const response = await axios.get(\"/getAdmins\"); // Update the endpoint accordingly\n        this.AdminsInfo = response.data;\n      } catch (error) {\n        console.error(\"Error fetching admin data:\", error);\n      }\n    },\n    async updateAdmin() {\n      try {\n        const originalData = {\n          ...this.selectedAdmin\n        }; // Save a copy of the original data\n\n        // Make the update only for the fields that have changed\n        Object.keys(originalData).forEach(key => {\n          if (originalData[key] === this.selectedAdmin[key]) {\n            delete this.selectedAdmin[key];\n          }\n        });\n        const response = await axios.put(`/api/updateAdmin/${originalData.admin_id}`,\n        // Use PUT and pass admin_id\n        this.selectedAdmin);\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData && responseData.message) {\n            console.log(responseData.message);\n            this.formVisible = false;\n            this.getAdminsInfo();\n          } else if (responseData && responseData.error) {\n            console.error(responseData.error);\n          } else {\n            console.error(\"Unexpected response format\");\n          }\n        } else {\n          console.error(`Unexpected response status: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"Error updating admin:\", error);\n      }\n    },\n    closeForm() {\n      this.formVisible = false;\n    },\n    openForm(adminInfo) {\n      this.selectedAdmin = {\n        ...adminInfo\n      };\n      this.formVisible = true;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","AdminsInfo","formVisible","selectedAdmin","admin_id","username","password","email","phone_no","created","getAdminsInfo","methods","response","get","error","console","updateAdmin","originalData","Object","keys","forEach","key","put","status","responseData","message","log","closeForm","openForm","adminInfo"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\ManageAdmin.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-data\">\r\n    <div class=\"order\">\r\n      <div class=\"head\">\r\n        <h3>Manage Admin</h3>\r\n        <i class=\"bx bx-search\"></i>\r\n        <i class=\"bx bx-filter\"></i>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Password</th>\r\n            <th>Email</th>\r\n            <th>Phone No.</th>\r\n            <th>Update</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"adminInfo in AdminsInfo\" :key=\"adminInfo.admin_id\">\r\n            <td>{{ adminInfo.username }}</td>\r\n            <td>{{ adminInfo.password }}</td>\r\n            <td>{{ adminInfo.email }}</td>\r\n            <td>{{ adminInfo.phone_no }}</td>\r\n            <td class=\"td-btn\">\r\n              <button class=\"pen-btn\" @click=\"openForm(adminInfo)\">\r\n                <i class=\"fa-solid fa-pen fa-lg\"></i>\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n  <form\r\n    class=\"form\"\r\n    id=\"modal-form\"\r\n    :style=\"{ display: formVisible ? 'block' : 'none' }\"\r\n  >\r\n    <input\r\n      v-model=\"selectedAdmin.username\"\r\n      type=\"text\"\r\n      placeholder=\"Username\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedAdmin.password\"\r\n      type=\"text\"\r\n      placeholder=\"Password\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedAdmin.email\"\r\n      type=\"text\"\r\n      placeholder=\"Email\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedAdmin.phone_no\"\r\n      type=\"text\"\r\n      placeholder=\"Phone No.\"\r\n      class=\"input\"\r\n    />\r\n    <div class=\"modal-buttons\">\r\n      <button @click.prevent=\"updateAdmin\">Update</button>\r\n      <button @click.prevent=\"closeForm\">Close</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      AdminsInfo: [],\r\n      formVisible: false,\r\n      selectedAdmin: {\r\n        admin_id: null,\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        phone_no: \"\",\r\n      },\r\n    };\r\n  },\r\n  created() {\r\n    this.getAdminsInfo();\r\n  },\r\n  methods: {\r\n    async getAdminsInfo() {\r\n      try {\r\n        const response = await axios.get(\"/getAdmins\"); // Update the endpoint accordingly\r\n        this.AdminsInfo = response.data;\r\n      } catch (error) {\r\n        console.error(\"Error fetching admin data:\", error);\r\n      }\r\n    },\r\n    async updateAdmin() {\r\n      try {\r\n        const originalData = { ...this.selectedAdmin }; // Save a copy of the original data\r\n\r\n        // Make the update only for the fields that have changed\r\n        Object.keys(originalData).forEach((key) => {\r\n          if (originalData[key] === this.selectedAdmin[key]) {\r\n            delete this.selectedAdmin[key];\r\n          }\r\n        });\r\n\r\n        const response = await axios.put(\r\n          `/api/updateAdmin/${originalData.admin_id}`, // Use PUT and pass admin_id\r\n          this.selectedAdmin\r\n        );\r\n\r\n        if (response.status === 200) {\r\n          const responseData = response.data;\r\n          if (responseData && responseData.message) {\r\n            console.log(responseData.message);\r\n            this.formVisible = false;\r\n            this.getAdminsInfo();\r\n          } else if (responseData && responseData.error) {\r\n            console.error(responseData.error);\r\n          } else {\r\n            console.error(\"Unexpected response format\");\r\n          }\r\n        } else {\r\n          console.error(`Unexpected response status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error updating admin:\", error);\r\n      }\r\n    },\r\n\r\n    closeForm() {\r\n      this.formVisible = false;\r\n    },\r\n    openForm(adminInfo) {\r\n      this.selectedAdmin = { ...adminInfo };\r\n      this.formVisible = true;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#modal-form {\r\n  position: absolute;\r\n  width: 50%;\r\n  top: 25%;\r\n  left: 25%;\r\n  display: none;\r\n}\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: end;\r\n  width: 100%;\r\n  gap: 1rem;\r\n  padding-top: 1rem;\r\n}\r\n</style>\r\n"],"mappings":"AAuEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,WAAW,EAAE,KAAK;MAClBC,aAAa,EAAE;QACbC,QAAQ,EAAE,IAAI;QACdC,QAAQ,EAAE,EAAE;QACZC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,YAAY,CAAC,EAAE;QAChD,IAAI,CAACZ,UAAS,GAAIW,QAAQ,CAACZ,IAAI;MACjC,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,YAAW,GAAI;UAAE,GAAG,IAAI,CAACd;QAAc,CAAC,EAAE;;QAEhD;QACAe,MAAM,CAACC,IAAI,CAACF,YAAY,CAAC,CAACG,OAAO,CAAEC,GAAG,IAAK;UACzC,IAAIJ,YAAY,CAACI,GAAG,MAAM,IAAI,CAAClB,aAAa,CAACkB,GAAG,CAAC,EAAE;YACjD,OAAO,IAAI,CAAClB,aAAa,CAACkB,GAAG,CAAC;UAChC;QACF,CAAC,CAAC;QAEF,MAAMT,QAAO,GAAI,MAAMb,KAAK,CAACuB,GAAG,CAC7B,oBAAmBL,YAAY,CAACb,QAAS,EAAC;QAAE;QAC7C,IAAI,CAACD,aACP,CAAC;QAED,IAAIS,QAAQ,CAACW,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAMC,YAAW,GAAIZ,QAAQ,CAACZ,IAAI;UAClC,IAAIwB,YAAW,IAAKA,YAAY,CAACC,OAAO,EAAE;YACxCV,OAAO,CAACW,GAAG,CAACF,YAAY,CAACC,OAAO,CAAC;YACjC,IAAI,CAACvB,WAAU,GAAI,KAAK;YACxB,IAAI,CAACQ,aAAa,CAAC,CAAC;UACtB,OAAO,IAAIc,YAAW,IAAKA,YAAY,CAACV,KAAK,EAAE;YAC7CC,OAAO,CAACD,KAAK,CAACU,YAAY,CAACV,KAAK,CAAC;UACnC,OAAO;YACLC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;UAC7C;QACF,OAAO;UACLC,OAAO,CAACD,KAAK,CAAE,+BAA8BF,QAAQ,CAACW,MAAO,EAAC,CAAC;QACjE;MACF,EAAE,OAAOT,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDa,SAASA,CAAA,EAAG;MACV,IAAI,CAACzB,WAAU,GAAI,KAAK;IAC1B,CAAC;IACD0B,QAAQA,CAACC,SAAS,EAAE;MAClB,IAAI,CAAC1B,aAAY,GAAI;QAAE,GAAG0B;MAAU,CAAC;MACrC,IAAI,CAAC3B,WAAU,GAAI,IAAI;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}