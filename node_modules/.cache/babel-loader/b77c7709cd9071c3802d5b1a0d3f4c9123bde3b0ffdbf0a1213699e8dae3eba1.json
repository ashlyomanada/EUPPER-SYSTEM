{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      userId: null,\n      userName: \"\",\n      profilePicUrl: \"\",\n      officeLocation: \"\",\n      phoneNumber: \"\",\n      email: \"\"\n    };\n  },\n  mounted() {\n    // Retrieve user information from session storage\n    const storedUserId = sessionStorage.getItem(\"id\");\n    // Inside the mounted() method\n    console.log(\"Stored User ID:\", storedUserId);\n\n    // Check if the user is logged in\n    if (storedUserId) {\n      // Make an Axios request to fetch user data based on session ID\n      this.fetchUserData();\n    }\n  },\n  methods: {\n    async fetchUserData() {\n      try {\n        const authToken = sessionStorage.getItem(\"id\");\n        if (!authToken) {\n          console.error(\"Authentication token not found\");\n          return;\n        }\n        const response = await axios.get(\"/getUserData\", {\n          headers: {\n            Authorization: `Bearer ${authToken}`\n          },\n          responseType: \"json\"\n        });\n        const userData = response.data;\n\n        // Check for errors from the server\n        if (\"error\" in userData) {\n          console.error(\"Error fetching user data:\", userData.error);\n          return;\n        }\n\n        // Set user-specific data\n        this.userId = userData.id;\n        this.userName = userData.username;\n        this.officeLocation = userData.office; // Assuming column names\n        this.phoneNumber = userData.phone_no;\n        this.email = userData.email;\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userId","userName","profilePicUrl","officeLocation","phoneNumber","email","mounted","storedUserId","sessionStorage","getItem","console","log","fetchUserData","methods","authToken","error","response","get","headers","Authorization","responseType","userData","id","username","office","phone_no"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"cover-container\">\r\n      <img src=\"./img/cover.png\" alt=\"\" srcset=\"\" class=\"cover-photo\" />\r\n    </div>\r\n    <div class=\"img-container\">\r\n      <div class=\"img-left\">\r\n        <img src=\"./img/logo.png\" alt=\"\" id=\"profile-pic\" />\r\n        <h2 class=\"name\">{{ userName }}</h2>\r\n      </div>\r\n      <div class=\"img-right\">\r\n        <button class=\"edit-profile-btn\">\r\n          <i class=\"fa-solid fa-pencil fa-lg\"></i>Edit profile\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"profile-description-container\">\r\n      <p>\r\n        <i class=\"fa-solid fa-briefcase fa-sm\"></i>Office: {{ officeLocation }}\r\n      </p>\r\n      <p><i class=\"fa-solid fa-phone fa-sm\"></i>Phone No. {{ phoneNumber }}</p>\r\n      <p><i class=\"fa-solid fa-envelope fa-sm\"></i>Email: {{ email }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userId: null,\r\n      userName: \"\",\r\n      profilePicUrl: \"\",\r\n      officeLocation: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    // Retrieve user information from session storage\r\n    const storedUserId = sessionStorage.getItem(\"id\");\r\n    // Inside the mounted() method\r\n    console.log(\"Stored User ID:\", storedUserId);\r\n\r\n    // Check if the user is logged in\r\n    if (storedUserId) {\r\n      // Make an Axios request to fetch user data based on session ID\r\n      this.fetchUserData();\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUserData() {\r\n      try {\r\n        const authToken = sessionStorage.getItem(\"id\");\r\n\r\n        if (!authToken) {\r\n          console.error(\"Authentication token not found\");\r\n          return;\r\n        }\r\n\r\n        const response = await axios.get(\"/getUserData\", {\r\n          headers: {\r\n            Authorization: `Bearer ${authToken}`,\r\n          },\r\n          responseType: \"json\",\r\n        });\r\n\r\n        const userData = response.data;\r\n\r\n        // Check for errors from the server\r\n        if (\"error\" in userData) {\r\n          console.error(\"Error fetching user data:\", userData.error);\r\n          return;\r\n        }\r\n\r\n        // Set user-specific data\r\n        this.userId = userData.id;\r\n        this.userName = userData.username;\r\n        this.officeLocation = userData.office; // Assuming column names\r\n        this.phoneNumber = userData.phone_no;\r\n        this.email = userData.email;\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.profile-container {\r\n  height: 91vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  color: var(--dark);\r\n}\r\n.cover-container {\r\n  position: absolute;\r\n  display: flex;\r\n  height: 45%;\r\n  width: 100%;\r\n  align-items: flex-end;\r\n}\r\n.cover-photo {\r\n  height: 92%;\r\n  width: 100%;\r\n}\r\n.img-container {\r\n  display: flex;\r\n  height: 38%;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  margin-top: 11.5rem;\r\n  z-index: 1;\r\n}\r\n.img-left {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 75%;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n.img-right {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 25%;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.edit-profile-btn {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.5rem;\r\n  background: var(--blue);\r\n  color: white;\r\n}\r\n#profile-pic {\r\n  height: 90%;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n}\r\n.profile-description-container {\r\n  height: 38%;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  line-height: 2rem;\r\n}\r\n</style>\r\n"],"mappings":"AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE,EAAE;MACjBC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,YAAW,GAAIC,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;IACjD;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,YAAY,CAAC;;IAE5C;IACA,IAAIA,YAAY,EAAE;MAChB;MACA,IAAI,CAACK,aAAa,CAAC,CAAC;IACtB;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,SAAQ,GAAIN,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;QAE9C,IAAI,CAACK,SAAS,EAAE;UACdJ,OAAO,CAACK,KAAK,CAAC,gCAAgC,CAAC;UAC/C;QACF;QAEA,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,GAAG,CAAC,cAAc,EAAE;UAC/CC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASL,SAAU;UACrC,CAAC;UACDM,YAAY,EAAE;QAChB,CAAC,CAAC;QAEF,MAAMC,QAAO,GAAIL,QAAQ,CAACjB,IAAI;;QAE9B;QACA,IAAI,OAAM,IAAKsB,QAAQ,EAAE;UACvBX,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEM,QAAQ,CAACN,KAAK,CAAC;UAC1D;QACF;;QAEA;QACA,IAAI,CAACf,MAAK,GAAIqB,QAAQ,CAACC,EAAE;QACzB,IAAI,CAACrB,QAAO,GAAIoB,QAAQ,CAACE,QAAQ;QACjC,IAAI,CAACpB,cAAa,GAAIkB,QAAQ,CAACG,MAAM,EAAE;QACvC,IAAI,CAACpB,WAAU,GAAIiB,QAAQ,CAACI,QAAQ;QACpC,IAAI,CAACpB,KAAI,GAAIgB,QAAQ,CAAChB,KAAK;MAC7B,EAAE,OAAOU,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}