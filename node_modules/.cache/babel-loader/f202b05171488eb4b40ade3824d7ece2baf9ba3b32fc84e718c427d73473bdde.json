{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      userId: null,\n      userName: \"\",\n      profilePic: \"\",\n      officeLocation: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      formVisible: false,\n      selectedUser: {\n        userId: null,\n        username: \"\",\n        office: \"\",\n        phone_no: \"\",\n        email: \"\"\n      }\n    };\n  },\n  mounted() {\n    // Retrieve user information from session storage\n    const storedUserId = sessionStorage.getItem(\"id\");\n\n    // Check if the user is logged in\n    if (storedUserId) {\n      // Make an Axios request to fetch user data based on session ID\n      axios.get(`/getUserData/${storedUserId}`).then(response => {\n        // Update the component's data with the fetched user data\n        const userData = response.data;\n        this.userId = userData.id;\n        this.userName = userData.username;\n        this.officeLocation = userData.office;\n        this.phoneNumber = userData.phone_no;\n        this.email = userData.email;\n        this.profilePic = userData.image;\n      }).catch(error => {\n        console.error(\"Error fetching user data:\", error);\n      });\n    }\n  },\n  methods: {\n    openForm() {\n      // When the \"Edit profile\" button is clicked, set the formVisible to true\n      this.formVisible = true;\n\n      // Populate the form fields with the current user's data\n      this.selectedUser = {\n        userId: this.userId,\n        username: this.userName,\n        office: this.officeLocation,\n        phone_no: this.phoneNumber,\n        email: this.email\n      };\n    },\n    closeForm() {\n      this.formVisible = false;\n    },\n    async saveUser() {\n      try {\n        const response = await axios.post(\"/api/saveUser\", this.selectedUser);\n        if (response.status === 200) {\n          const responseData = response.data;\n          if (responseData && responseData.success) {\n            console.log(responseData.message);\n            this.formVisible = false;\n            this.getUsersInfo();\n          } else {\n            console.error(\"Save failed:\", responseData.message);\n          }\n        } else {\n          console.error(`Unexpected response status: ${response.status}`);\n        }\n      } catch (error) {\n        console.error(\"Error saving admin:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","userId","userName","profilePic","officeLocation","phoneNumber","email","formVisible","selectedUser","username","office","phone_no","mounted","storedUserId","sessionStorage","getItem","get","then","response","userData","id","image","catch","error","console","methods","openForm","closeForm","saveUser","post","status","responseData","success","log","message","getUsersInfo"],"sources":["C:\\laragon\\www\\EUPPER-SYSTEM\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"cover-container\">\r\n      <img src=\"./img/cover.png\" alt=\"\" srcset=\"\" class=\"cover-photo\" />\r\n    </div>\r\n    <div class=\"img-container\">\r\n      <div class=\"img-left\">\r\n        <img\r\n          :src=\"`http://localhost:8080/${profilePic}`\"\r\n          alt=\"\"\r\n          id=\"profile-pic\"\r\n        />\r\n        <h2 class=\"name\">{{ userName }}</h2>\r\n      </div>\r\n      <div class=\"img-right\">\r\n        <button class=\"edit-profile-btn\" @click.prevent=\"openForm\">\r\n          <i class=\"fa-solid fa-pencil fa-lg\"></i>Edit profile\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"profile-description-container\">\r\n      <p>\r\n        <i class=\"fa-solid fa-briefcase fa-sm\"></i>Office: {{ officeLocation }}\r\n      </p>\r\n      <p><i class=\"fa-solid fa-phone fa-sm\"></i>Phone No. {{ phoneNumber }}</p>\r\n      <p><i class=\"fa-solid fa-envelope fa-sm\"></i>Email: {{ email }}</p>\r\n    </div>\r\n  </div>\r\n  <form\r\n    class=\"form\"\r\n    id=\"modal-form\"\r\n    :style=\"{ display: formVisible ? 'block' : 'none' }\"\r\n  >\r\n    <input\r\n      v-model=\"selectedUser.username\"\r\n      type=\"text\"\r\n      placeholder=\"Username\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedUser.office\"\r\n      type=\"text\"\r\n      placeholder=\"Office\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedUser.email\"\r\n      type=\"text\"\r\n      placeholder=\"Email\"\r\n      class=\"input\"\r\n    />\r\n    <input\r\n      v-model=\"selectedUser.phone_no\"\r\n      type=\"text\"\r\n      placeholder=\"Phone No.\"\r\n      class=\"input\"\r\n    />\r\n    <div class=\"modal-buttons\">\r\n      <button @click.prevent=\"saveUser\">Save</button>\r\n      <button @click.prevent=\"closeForm\">Close</button>\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userId: null,\r\n      userName: \"\",\r\n      profilePic: \"\",\r\n      officeLocation: \"\",\r\n      phoneNumber: \"\",\r\n      email: \"\",\r\n      formVisible: false,\r\n      selectedUser: {\r\n        userId: null,\r\n        username: \"\",\r\n        office: \"\",\r\n        phone_no: \"\",\r\n        email: \"\",\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    // Retrieve user information from session storage\r\n    const storedUserId = sessionStorage.getItem(\"id\");\r\n\r\n    // Check if the user is logged in\r\n    if (storedUserId) {\r\n      // Make an Axios request to fetch user data based on session ID\r\n      axios\r\n        .get(`/getUserData/${storedUserId}`)\r\n        .then((response) => {\r\n          // Update the component's data with the fetched user data\r\n          const userData = response.data;\r\n          this.userId = userData.id;\r\n          this.userName = userData.username;\r\n          this.officeLocation = userData.office;\r\n          this.phoneNumber = userData.phone_no;\r\n          this.email = userData.email;\r\n          this.profilePic = userData.image;\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching user data:\", error);\r\n        });\r\n    }\r\n  },\r\n  methods: {\r\n    openForm() {\r\n      // When the \"Edit profile\" button is clicked, set the formVisible to true\r\n      this.formVisible = true;\r\n\r\n      // Populate the form fields with the current user's data\r\n      this.selectedUser = {\r\n        userId: this.userId,\r\n        username: this.userName,\r\n        office: this.officeLocation,\r\n        phone_no: this.phoneNumber,\r\n        email: this.email,\r\n      };\r\n    },\r\n    closeForm() {\r\n      this.formVisible = false;\r\n    },\r\n    async saveUser() {\r\n      try {\r\n        const response = await axios.post(\"/api/saveUser\", this.selectedUser);\r\n\r\n        if (response.status === 200) {\r\n          const responseData = response.data;\r\n\r\n          if (responseData && responseData.success) {\r\n            console.log(responseData.message);\r\n            this.formVisible = false;\r\n            this.getUsersInfo();\r\n          } else {\r\n            console.error(\"Save failed:\", responseData.message);\r\n          }\r\n        } else {\r\n          console.error(`Unexpected response status: ${response.status}`);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error saving admin:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#modal-form {\r\n  position: absolute;\r\n  width: 50%;\r\n  top: 15%;\r\n  left: 25%;\r\n  display: none;\r\n}\r\n\r\n.modal-buttons {\r\n  display: flex;\r\n  justify-content: end;\r\n  width: 100%;\r\n  gap: 1rem;\r\n  padding-top: 1rem;\r\n}\r\n.profile-container {\r\n  height: 91vh;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  color: var(--dark);\r\n}\r\n.cover-container {\r\n  position: absolute;\r\n  display: flex;\r\n  height: 45%;\r\n  width: 100%;\r\n  align-items: flex-end;\r\n}\r\n.cover-photo {\r\n  height: 92%;\r\n  width: 100%;\r\n}\r\n.img-container {\r\n  display: flex;\r\n  height: 38%;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  margin-top: 11.5rem;\r\n  z-index: 1;\r\n}\r\n.img-left {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 75%;\r\n  align-items: center;\r\n  gap: 1rem;\r\n}\r\n.img-right {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 25%;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.edit-profile-btn {\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 0.5rem;\r\n  background: var(--blue);\r\n  color: white;\r\n}\r\n#profile-pic {\r\n  height: 90%;\r\n  background-color: white;\r\n  border-radius: 50%;\r\n}\r\n.profile-description-container {\r\n  height: 38%;\r\n  width: 100%;\r\n  padding: 1rem;\r\n  line-height: 2rem;\r\n}\r\n</style>\r\n"],"mappings":"AAiEA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,cAAc,EAAE,EAAE;MAClBC,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,KAAK;MAClBC,YAAY,EAAE;QACZP,MAAM,EAAE,IAAI;QACZQ,QAAQ,EAAE,EAAE;QACZC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,EAAE;QACZL,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,YAAW,GAAIC,cAAc,CAACC,OAAO,CAAC,IAAI,CAAC;;IAEjD;IACA,IAAIF,YAAY,EAAE;MAChB;MACAd,KAAI,CACDiB,GAAG,CAAE,gBAAeH,YAAa,EAAC,EAClCI,IAAI,CAAEC,QAAQ,IAAK;QAClB;QACA,MAAMC,QAAO,GAAID,QAAQ,CAAClB,IAAI;QAC9B,IAAI,CAACC,MAAK,GAAIkB,QAAQ,CAACC,EAAE;QACzB,IAAI,CAAClB,QAAO,GAAIiB,QAAQ,CAACV,QAAQ;QACjC,IAAI,CAACL,cAAa,GAAIe,QAAQ,CAACT,MAAM;QACrC,IAAI,CAACL,WAAU,GAAIc,QAAQ,CAACR,QAAQ;QACpC,IAAI,CAACL,KAAI,GAAIa,QAAQ,CAACb,KAAK;QAC3B,IAAI,CAACH,UAAS,GAAIgB,QAAQ,CAACE,KAAK;MAClC,CAAC,EACAC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,QAAQA,CAAA,EAAG;MACT;MACA,IAAI,CAACnB,WAAU,GAAI,IAAI;;MAEvB;MACA,IAAI,CAACC,YAAW,GAAI;QAClBP,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBQ,QAAQ,EAAE,IAAI,CAACP,QAAQ;QACvBQ,MAAM,EAAE,IAAI,CAACN,cAAc;QAC3BO,QAAQ,EAAE,IAAI,CAACN,WAAW;QAC1BC,KAAK,EAAE,IAAI,CAACA;MACd,CAAC;IACH,CAAC;IACDqB,SAASA,CAAA,EAAG;MACV,IAAI,CAACpB,WAAU,GAAI,KAAK;IAC1B,CAAC;IACD,MAAMqB,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMnB,KAAK,CAAC8B,IAAI,CAAC,eAAe,EAAE,IAAI,CAACrB,YAAY,CAAC;QAErE,IAAIU,QAAQ,CAACY,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAMC,YAAW,GAAIb,QAAQ,CAAClB,IAAI;UAElC,IAAI+B,YAAW,IAAKA,YAAY,CAACC,OAAO,EAAE;YACxCR,OAAO,CAACS,GAAG,CAACF,YAAY,CAACG,OAAO,CAAC;YACjC,IAAI,CAAC3B,WAAU,GAAI,KAAK;YACxB,IAAI,CAAC4B,YAAY,CAAC,CAAC;UACrB,OAAO;YACLX,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEQ,YAAY,CAACG,OAAO,CAAC;UACrD;QACF,OAAO;UACLV,OAAO,CAACD,KAAK,CAAE,+BAA8BL,QAAQ,CAACY,MAAO,EAAC,CAAC;QACjE;MACF,EAAE,OAAOP,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}